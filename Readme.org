#+TITLE: Adventures in VHLD

* Goal of the project
Refresh my VHDL and make a workflow using
 - emacs (VHDL mode)
 - ghdl as compiler
   + ghdl as simulation too
   + gtkwave as waveform viewer
 - yosys as synthesis tool
 - iCE40-HX8K as development platform; [[./documentation/hardware.org][see hardware documents]]
 
 - I also want to investigate unit testing of VHDL code and continuos integration using VUnit
 [![](https://github.com/mbercas/ice40hx-8k/workflows/VUnit%20Tests/badge.svg)](https://github.com/mbercas/ice40hx-8k/actions)


* Installing the toolchain

This section describes the steps to install the toolchain in Linux, for dependencies refer to the git pages of the pacakges.
 1. Clone and build ghdl (enable synthesis option)
 2. Clone and build yosis
 3. Clone and build ghdl-yosis-plugin
Default installation path uses /usr/local

#+NAME: dependencies_in_ubuntu
#+BEGIN_SRC bash
# ghdl
sudo apt install gnat

# yosys
sudo apt-get install build-essential clang bison flex libreadline-dev gawk \
                     tcl-dev libffi-dev git graphviz xdot pkg-config python3 \
                     libboost-system-dev libboost-python-dev libboost-filesystem-dev \
                     zlib1g-dev
# icestrom
sudo apt-get install build-essential clang bison flex libreadline-dev \
                     gawk tcl-dev libffi-dev git mercurial graphviz   \
                     xdot pkg-config python python3 libftdi-dev \
                     qt5-default python3-dev libboost-all-dev cmake libeigen3-dev
#nextpnr
sudo apt install libboost-dev libboost-filesystem-dev libboost-thread-dev \
                 libboost-program-options-dev libboost-python-dev libboost-iostreams-dev \
                 libboost-dev
sudo apt install libeigen3-dev
#+END_SRC

#+NAME: dependencies_in_fedora_32
#+BEGIN_SRC bash
# ghdl
sudo apt install gcc-gnat

#yosys
sudo dnf install clang bison flex readline-devel gawk tcl-devel libffi-devel \
                 graphviz xdotool pkg-config boost-system boost-python3 \
                 boost-filesystem zlib-devel
#icestrom
sudo dnf install cmake eigen3-devel libffi-devel boost-program-options \
                 python3-devel readline-devel libftdi-devel

#nextpnr
sudo dnf install boost-devel qt5-devel boost-python3-devel
#+END_SRC

#+NAME: installation
#+BEGIN_SRC bash
mkdir /opt
cd /opt
sudo mkdir ghdl
sudo chown manuel:manuel ghdl
cd ghdl/
git clone https://github.com/ghdl/ghdl.git
cd ghdl
./cofigure --enable-synth
make
sudo make install
cd ..

git clone https://github.com/YosysHQ/yosys.git
cd yosys/
make
sudo make install
cd ..

git clone https://github.com/ghdl/ghdl-yosys-plugin.git
cd
ghdl-yosys-plugin
make
sudo make install
cd ..
#+END_SRC

*** Install icestorm
#+BEGIN_SRC
git clone https://github.com/cliffordwolf/icestorm.git icestorm
cd icestorm
make -j$(nproc)
sudo make install
cd ..
#+END_SRC

Build Place and router for iCE40
#+BEGIN_SRC
git clone https://github.com/YosysHQ/nextpnr.git
cd nextpnr

cmake -DARCH=ice40 .
make -j$(nproc)
sudo make install
cd ..
#+END_SRC


Install icepack
#+BEGIN_SRC
sudo apt install fpga-icestorm
#+END_SRC

in Fedora
#+BEGIN_SRC
sudo dnf install icestorm
#+END_SRC


* Test with an example
#+BEGIN_SRC
cd examples/ice40hx8k/leds/

ghdl -a leds.vhdl
ghdl -a spin1.vhdl

# Synthesize the design.
# NOTE: if ghdl is built as a module, set MODULE to '-m ghdl' or '-m path/to/ghdl.so'
yosys -m ghdl -p 'ghdl leds; synth_ice40 -json leds.json'

# P&R
nextpnr-ice40 --hx8k --package ct256 --pcf pinmap.pcf --asc leds.asc --json leds.json

# Generate bitstream
icepack leds.asc leds.bin

# Program FPGA
iceprog leds.bin
#+END_SRC


** Problems
*** nextpnr-ice40 can not find libQt5Core.so.5
Check if the library is linked and in the right location, install if not there
#+BEGIN_SRC
ldd /usr/local/bin/nextpnr-ice40
#+END_SRC
If the library is there
#+BEGIN_SRC
sudo strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5
#+END_SRC

*** no access to FTDI serial driver
- add user to dialout group
- change permissions in COM port
#+BEGIN_SRC
adduser $(whoami) dialout
chmod 666 /dev/ttyS6
#+END_SRC

* The iCE40HX8K breakout board
** [[file:///C:/Users/manuel/projects/fpga/ice40-hx8k/docs/ice40-hx8k-b-evn-user-guide.pdf][FPGA]]
The FPGA device in the baord is iCE40HX-8K-CT256, so options for nextpnr are --hx8k --package ct256, see [[http://www.clifford.at/icestorm/][link]]


* FLOW
** Compiler - ghdl -a
   - link
** Testing - VUNIT
   - VUNIT with Python interface; [[https://vunit.github.io/py/ui.html][link]]
** Simulation - ghdl -r
*** Installation
    pip install vunit-hdl
